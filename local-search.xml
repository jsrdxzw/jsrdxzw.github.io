<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Android仿今日头条图片滑动退出效果</title>
    <link href="/2021/07/23/coupon-photo/"/>
    <url>/2021/07/23/coupon-photo/</url>
    
    <content type="html"><![CDATA[<h3 id="Android仿今日头条图片滑动退出效果-Kotlin版"><a href="#Android仿今日头条图片滑动退出效果-Kotlin版" class="headerlink" title="Android仿今日头条图片滑动退出效果-Kotlin版"></a>Android仿今日头条图片滑动退出效果-Kotlin版</h3><p>主要功能:</p><ol><li>在下滑时，随着手指的移动，图片区域跟随移动，并且activity的背景和页码逐渐变的透明</li><li>滑动距离不超过设定的临界值时，会有回弹效果。</li><li>滑动超过设置的临界值时，放开手指，页面滑动退出消失</li><li>图片可以正常放大缩小，页面不跟随手指上下滑动</li><li>使用了共享元素的页面切换效果</li></ol><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SlideCloseLayout</span></span>(context: Context, attrs: AttributeSet? = <span class="hljs-literal">null</span>) : FrameLayout(context, attrs) &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> previousX: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0f</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> previousY: <span class="hljs-built_in">Float</span> = <span class="hljs-number">0f</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">var</span> scrollListener: LayoutScrollListener? = <span class="hljs-literal">null</span><br><br>    <span class="hljs-keyword">init</span> &#123;<br>        background?.alpha = <span class="hljs-number">255</span><br>    &#125;<br><br><br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onInterceptTouchEvent</span><span class="hljs-params">(ev: <span class="hljs-type">MotionEvent</span>?)</span></span>: <span class="hljs-built_in">Boolean</span> &#123;<br>        ev?.pointerCount?.let &#123;<br>            <span class="hljs-keyword">if</span> (it &gt; <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>            <span class="hljs-keyword">val</span> y: <span class="hljs-built_in">Float</span> = ev.rawY<br>            <span class="hljs-keyword">val</span> x: <span class="hljs-built_in">Float</span> = ev.rawX<br>            <span class="hljs-keyword">when</span> (ev.action) &#123;<br>                MotionEvent.ACTION_DOWN -&gt; &#123;<br>                    previousX = x<br>                    previousY = y<br>                &#125;<br>                MotionEvent.ACTION_MOVE -&gt; &#123;<br>                    <span class="hljs-keyword">val</span> diffY = y - previousY<br>                    <span class="hljs-keyword">val</span> diffX = x - previousX<br>                    <span class="hljs-keyword">if</span> (diffY &lt;= <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>                    <span class="hljs-keyword">if</span> (Math.abs(diffX) + <span class="hljs-number">50</span> &lt; Math.abs(diffY)) &#123;<br>                        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    &#125;<br><br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onTouchEvent</span><span class="hljs-params">(ev: <span class="hljs-type">MotionEvent</span>?)</span></span>: <span class="hljs-built_in">Boolean</span> &#123;<br>        ev?.let &#123;<br>            <span class="hljs-keyword">val</span> y = ev.rawY<br>            <span class="hljs-keyword">val</span> x = ev.rawX<br>            <span class="hljs-keyword">when</span> (ev.action) &#123;<br>                MotionEvent.ACTION_DOWN -&gt; &#123;<br>                    previousX = x<br>                    previousY = y<br>                &#125;<br>                MotionEvent.ACTION_MOVE -&gt; &#123;<br>                    <span class="hljs-keyword">val</span> diffY = Math.max(y - previousY, <span class="hljs-number">0f</span>)<br>                    translationY = diffY<br>                    <span class="hljs-keyword">val</span> alpha = diffY / height<br>                    <span class="hljs-keyword">this</span>.alpha = <span class="hljs-number">1f</span> - alpha<br>                &#125;<br>                MotionEvent.ACTION_UP -&gt; &#123;<br>                    <span class="hljs-keyword">if</span> (Math.abs(translationY) &gt; (height / <span class="hljs-number">4</span>)) &#123;<br>                        layoutExitAnim()<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        layoutRecoverAnim()<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">else</span> -&gt; &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.onTouchEvent(ev)<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.onTouchEvent(ev)<br>    &#125;<br><br><br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">setLayoutScrollListener</span><span class="hljs-params">(listener: <span class="hljs-type">LayoutScrollListener</span>)</span></span> &#123;<br>        scrollListener = listener<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">layoutRecoverAnim</span><span class="hljs-params">()</span></span> &#123;<br>        <span class="hljs-keyword">val</span> recoverAnim = ObjectAnimator.ofFloat(<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;translationY&quot;</span>, <span class="hljs-keyword">this</span>.translationY, <span class="hljs-number">0f</span>)<br>        recoverAnim.duration = <span class="hljs-number">100</span><br>        recoverAnim.start()<br>        <span class="hljs-keyword">this</span>.alpha = <span class="hljs-number">1f</span><br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">layoutExitAnim</span><span class="hljs-params">()</span></span> &#123;<br>        <span class="hljs-keyword">val</span> exitAnim: ObjectAnimator = ObjectAnimator.ofFloat(<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;translationY&quot;</span>, translationY, height.toFloat())<br>        exitAnim.addListener(<span class="hljs-keyword">object</span> : AnimatorListenerAdapter() &#123;<br>            <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onAnimationEnd</span><span class="hljs-params">(animation: <span class="hljs-type">Animator</span>?)</span></span> &#123;<br>                <span class="hljs-keyword">this</span><span class="hljs-symbol">@SlideCloseLayout</span>.alpha = <span class="hljs-number">0f</span><br>                scrollListener?.onLayoutClosed()<br>            &#125;<br>        &#125;)<br>        exitAnim.addUpdateListener &#123;<br>            <span class="hljs-keyword">this</span>.alpha = <span class="hljs-number">1</span> - translationY / height<br>        &#125;<br>        exitAnim.duration = <span class="hljs-number">200</span><br>        exitAnim.start()<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">LayoutScrollListener</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onLayoutClosed</span><span class="hljs-params">()</span></span><br>&#125;<br></code></pre></td></tr></table></figure><p>这里自定义了一个Layout，为了能够监听手指滑动的事件</p><p>布局文件只要在这个自定义下嵌套即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span><br> <br> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">jp.hotpepper.android.beauty.hair.application.widget.SlideCloseLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/slide_close_layout&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;@color/beauty_text_black&quot;</span>&gt;</span><br> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">android.support.v4.view.ViewPager</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/coupon_photo_view_pager&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_gravity</span>=<span class="hljs-string">&quot;center&quot;</span> /&gt;</span><br> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/text_view_current_page&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_gravity</span>=<span class="hljs-string">&quot;bottom|center&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginBottom</span>=<span class="hljs-string">&quot;20dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;@color/beauty_text_white&quot;</span> /&gt;</span><br> <br>        <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/image_view_button_close&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_gravity</span>=<span class="hljs-string">&quot;top|left&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;15dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">&quot;25dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;@drawable/btn_close_circle&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:foreground</span>=<span class="hljs-string">&quot;?android:attr/selectableItemBackground&quot;</span> /&gt;</span><br> <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">jp.hotpepper.android.beauty.hair.application.widget.SlideCloseLayout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在这里我们因为使用了自动绑定，所以最外层需要绑定一个Layout</p><p>然后是我们的图片画廊展示类</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CouponPhotoViewPagerActivity</span> : <span class="hljs-type">BaseActivity</span></span>() &#123;<br> <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">val</span> photoUrls: ArrayList&lt;String&gt; <span class="hljs-keyword">by</span> extra()<br> <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">val</span> binding <span class="hljs-keyword">by</span> binding&lt;ActivityCouponPhotoViewPagerBinding&gt;(R.layout.activity_coupon_photo_view_pager)<br> <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">val</span> viewPager: ViewPager <span class="hljs-keyword">by</span> lazy &#123;<br>        binding.couponPhotoViewPager<br>    &#125;<br> <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">val</span> closeImageView: ImageView <span class="hljs-keyword">by</span> lazy &#123;<br>        binding.imageViewButtonClose<br>    &#125;<br> <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">val</span> showCurrentPage: TextView <span class="hljs-keyword">by</span> lazy &#123;<br>        binding.textViewCurrentPage<br>    &#125;<br> <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">val</span> slideCloseLayout: SlideCloseLayout <span class="hljs-keyword">by</span> lazy &#123;<br>        binding.slideCloseLayout<br>    &#125;<br> <br>    <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(savedInstanceState: <span class="hljs-type">Bundle</span>?)</span></span> &#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState)<br>        initComponent()<br>    &#125;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">initComponent</span><span class="hljs-params">()</span></span> &#123;<br>        activityComponent.inject(<span class="hljs-keyword">this</span>)<br>        viewPager.adapter = CouponPhotoViewPagerAdapter(photoUrls)<br>        viewPager.setTransitionNameCompat(SHARED_ELEMENT_NAME)<br>        showCurrentPage.text = getString(R.string.coupon_photo_view_current_page, <span class="hljs-number">1</span>, photoUrls.size)<br>        initEventListener()<br>    &#125;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">initEventListener</span><span class="hljs-params">()</span></span> &#123;<br>        closeImageView.setOnClickListener &#123;<br>            finishAfterTransitionCompat()<br>        &#125;<br>        viewPager.addOnPageChangeListener(<span class="hljs-keyword">object</span> : ViewPager.SimpleOnPageChangeListener() &#123;<br>            <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onPageSelected</span><span class="hljs-params">(p0: <span class="hljs-type">Int</span>)</span></span> &#123;<br>                showCurrentPage.text = getString(R.string.coupon_photo_view_current_page, p0 + <span class="hljs-number">1</span>, photoUrls.size)<br>            &#125;<br>        &#125;)<br><br>        slideCloseLayout.setLayoutScrollListener(<span class="hljs-keyword">object</span> : LayoutScrollListener &#123;<br>            <span class="hljs-keyword">override</span> <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">onLayoutClosed</span><span class="hljs-params">()</span></span> &#123;<br>                finish()<br>                overridePendingTransition(R.anim.fade_in, R.anim.fade_out)<br>            &#125;<br>        &#125;)<br>    &#125;<br>    <br>    <span class="hljs-keyword">companion</span> <span class="hljs-keyword">object</span> &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">val</span> SHARED_ELEMENT_NAME = <span class="hljs-string">&quot;sharedView&quot;</span><br>        <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">intent</span><span class="hljs-params">(context: <span class="hljs-type">Context</span>, photoUrls: <span class="hljs-type">List</span>&lt;<span class="hljs-type">String</span>&gt;)</span></span>: Intent =<br>                Intent(context, CouponPhotoViewPagerActivity::<span class="hljs-keyword">class</span>.java)<br>                        .put(CouponPhotoViewPagerActivity::photoUrls, ArrayList(photoUrls))<br><br>        <span class="hljs-function"><span class="hljs-keyword">fun</span> <span class="hljs-title">transitionOptions</span><span class="hljs-params">(activity: <span class="hljs-type">Activity</span>, sharedElement: <span class="hljs-type">View</span>)</span></span> = ActivityOptionsCompat.makeSceneTransitionAnimation(activity, sharedElement, SHARED_ELEMENT_NAME).toBundle()<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>给这个activity定一个主题，不然在下滑的时候是不能透明的，也看不到之前的activity</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;SlideCloseTheme&quot;</span>&gt;</span><span class="xml"></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;windowNoTitle&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowFullscreen&quot;</span>&gt;</span>?android:windowNoTitle<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowIsTranslucent&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowBackground&quot;</span>&gt;</span>@android:color/transparent<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;android:windowNoTitle&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">item</span>&gt;</span></span><br><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这个主题表示activity是全屏显示并且可以透明化的。</p><p>然后，在manifest.xml中应用这个主题</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-tag">&lt;<span class="hljs-name">activity</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;.application.activity.CouponPhotoViewPagerActivity&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:configChanges</span>=<span class="hljs-string">&quot;orientation&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:screenOrientation</span>=<span class="hljs-string">&quot;portrait&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:theme</span>=<span class="hljs-string">&quot;@style/SlideCloseTheme&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>实现效果还是很不错的。</p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Android</tag>
      
      <tag>Kotlin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx的那些事儿</title>
    <link href="/2021/07/22/nginx/"/>
    <url>/2021/07/22/nginx/</url>
    
    <content type="html"><![CDATA[<h3 id="nginx常用命令"><a href="#nginx常用命令" class="headerlink" title="nginx常用命令"></a>nginx常用命令</h3><ul><li>nginx主要命令<ul><li><code>./nginx</code> 启动nginx</li><li><code>./nginx -s stop</code> 终止nginx(当然也可以找到nginx进程号，然后使用kill -9 杀掉nginx进程)</li><li><code>./nginx -s reload</code> (重新加载nginx.conf配置文件)</li></ul></li></ul><h3 id="nginx核心配置"><a href="#nginx核心配置" class="headerlink" title="nginx核心配置"></a>nginx核心配置</h3><p>nginx的配置分为<em>全局块</em>、<em>events块</em>、<em>http块</em></p><h4 id="全局块"><a href="#全局块" class="headerlink" title="全局块"></a>全局块</h4><p>从配置文件开始到events块之间的内容，此处的配置影响nginx服务器整体的运行，比如worker进 程的数量、错误日志的位置等</p><h4 id="events块"><a href="#events块" class="headerlink" title="events块"></a>events块</h4><p>events块主要影响nginx服务器与用户的网络连接，比如worker_connections为1024，表示每个<br>worker process 支持的最大连接数为1024</p><h4 id="http块"><a href="#http块" class="headerlink" title="http块"></a>http块</h4><p>http块是配置最频繁的部分，如虚拟主机的配置，监听端口的配置，请求转发、反向代理、负载均衡等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs text"><br>#user  nobody;<br># worker进程数量，即工作进程，通常设置=cpu数量<br>worker_processes  1;<br># 全局错误日志和pid文件位置<br>#error_log  logs/error.log;<br>#error_log  logs/error.log  notice;<br>#error_log  logs/error.log  info;<br><br>#pid        logs/nginx.pid;<br><br># events模块，影响nginx服务器和用户的网络连接<br>events &#123;<br>    # 单个worker连接的最大并发连接数<br>    worker_connections  1024;<br>&#125;<br><br><br>http &#123;<br>    include       mime.types;<br>    default_type  application/octet-stream;<br><br>    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;<br>    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;<br>    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;<br><br>    #access_log  logs/access.log  main;<br><br>    sendfile        on;<br>    #tcp_nopush     on;<br><br>    #keepalive_timeout  0;<br>    # 连接超时时间<br>    keepalive_timeout  65;<br><br>    # 压缩<br>    #gzip  on;<br><br>    server &#123;<br>        # 监听的端口<br>        listen       80;<br>        # 虚拟主机 www.xxx.com<br>        server_name  localhost;<br><br>        #charset koi8-r;<br><br>        #access_log  logs/host.access.log  main;<br><br>        # tomcat context<br>        location / &#123;<br>            root   html; # 网站的根目录<br>            index  index.html index.htm;<br>        &#125;<br><br>        #error_page  404              /404.html;<br><br>        # redirect server error pages to the static page /50x.html<br>        #<br>        error_page   500 502 503 504  /50x.html;<br>        location = /50x.html &#123;<br>            root   html;<br>        &#125;<br><br>        # proxy the PHP scripts to Apache listening on 127.0.0.1:80<br>        #<br>        #location ~ \.php$ &#123;<br>        #    proxy_pass   http://127.0.0.1;<br>        #&#125;<br><br>        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000<br>        #<br>        #location ~ \.php$ &#123;<br>        #    root           html;<br>        #    fastcgi_pass   127.0.0.1:9000;<br>        #    fastcgi_index  index.php;<br>        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;<br>        #    include        fastcgi_params;<br>        #&#125;<br><br>        # deny access to .htaccess files, if Apache&#x27;s document root<br>        # concurs with nginx&#x27;s one<br>        #<br>        #location ~ /\.ht &#123;<br>        #    deny  all;<br>        #&#125;<br>    &#125;<br><br><br>    # another virtual host using mix of IP-, name-, and port-based configuration<br>    #<br>    #server &#123;<br>    #    listen       8000;<br>    #    listen       somename:8080;<br>    #    server_name  somename  alias  another.alias;<br><br>    #    location / &#123;<br>    #        root   html;<br>    #        index  index.html index.htm;<br>    #    &#125;<br>    #&#125;<br><br><br>    # HTTPS server<br>    #<br>    #server &#123;<br>    #    listen       443 ssl;<br>    #    server_name  localhost;<br><br>    #    ssl_certificate      cert.pem;<br>    #    ssl_certificate_key  cert.key;<br><br>    #    ssl_session_cache    shared:SSL:1m;<br>    #    ssl_session_timeout  5m;<br><br>    #    ssl_ciphers  HIGH:!aNULL:!MD5;<br>    #    ssl_prefer_server_ciphers  on;<br><br>    #    location / &#123;<br>    #        root   html;<br>    #        index  index.html index.htm;<br>    #    &#125;<br>    #&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速排序</title>
    <link href="/2021/07/22/quick-sort/"/>
    <url>/2021/07/22/quick-sort/</url>
    
    <content type="html"><![CDATA[<h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>经典的快速排序使用了分治的思想，平均复杂度为O(nlgn)，最坏的情况会退化为O(n^2)</p><p>快排的核心思想就是，找到一个点，先把比它小的排在左边，比它大的排在右边，然后一直递归排下去</p><p><a href="https://leetcode-cn.com/problems/sort-an-array/">Leetcode 912</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[] sortArray(<span class="hljs-keyword">int</span>[] nums) &#123;<br>        partition(nums, <span class="hljs-number">0</span>, nums.length - <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">return</span> nums;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> left, <span class="hljs-keyword">int</span> right)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (left &gt;= right) <span class="hljs-keyword">return</span>;<br>        <span class="hljs-keyword">int</span> pivot = nums[left]; <span class="hljs-comment">// 比较值</span><br>        <span class="hljs-keyword">int</span> j = left; <span class="hljs-comment">// 分界点</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = left + <span class="hljs-number">1</span>; i &lt;= right; i++) &#123;<br>            <span class="hljs-keyword">if</span> (nums[i] &lt; pivot) &#123;<br>                j++;<br>                swap(nums, i, j);<br>            &#125;<br>        &#125;<br>        swap(nums, left, j);<br>        partition(nums, j + <span class="hljs-number">1</span>, right);<br>        partition(nums, left, j - <span class="hljs-number">1</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> tmp = nums[j];<br>        nums[j] = nums[i];<br>        nums[i] = tmp;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="加上随机因子的快速排序"><a href="#加上随机因子的快速排序" class="headerlink" title="加上随机因子的快速排序"></a>加上随机因子的快速排序</h3><p>为了避免出现最坏的情况O(n^2)，我们可以引入随机因子，即在每一次分治的步骤中都加上随机的<strong>pivot</strong>，并交换位置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> left, <span class="hljs-keyword">int</span> right)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (left &gt;= right) <span class="hljs-keyword">return</span>;<br>        <span class="hljs-comment">// 加上随机因子，ran表示的是随机的位置</span><br>        <span class="hljs-keyword">int</span> ran = random.nextInt(right - left + <span class="hljs-number">1</span>) + left;<br>        swap(nums, left, ran);<br>        <span class="hljs-keyword">int</span> pivot = nums[left]; <span class="hljs-comment">// 比较值</span><br>        <span class="hljs-keyword">int</span> j = left; <span class="hljs-comment">// 分界点</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = left + <span class="hljs-number">1</span>; i &lt;= right; i++) &#123;<br>            <span class="hljs-keyword">if</span> (nums[i] &lt; pivot) &#123;<br>                j++;<br>                swap(nums, i, j);<br>            &#125;<br>        &#125;<br>        swap(nums, left, j);<br>        partition(nums, j + <span class="hljs-number">1</span>, right);<br>        partition(nums, left, j - <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="快速选择"><a href="#快速选择" class="headerlink" title="快速选择"></a>快速选择</h3><p>和快速排序类似，快速选择不需要全部排完，只需要对K个元素排好序，然后取K个元素即可</p><p><a href="https://leetcode-cn.com/problems/smallest-k-lcci/">Leetcode 最小的K个数</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[] smallestK(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> k) &#123;<br>        partition(arr, <span class="hljs-number">0</span>, arr.length - <span class="hljs-number">1</span>, k);<br>        <span class="hljs-keyword">return</span> Arrays.copyOfRange(arr, <span class="hljs-number">0</span>, k);<br>    &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> l, <span class="hljs-keyword">int</span> r, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (l &gt;= r) <span class="hljs-keyword">return</span>;<br>        <span class="hljs-keyword">int</span> j = l;<br>        <span class="hljs-keyword">int</span> pivot = arr[l];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = j + <span class="hljs-number">1</span>; i &lt;= r; i++) &#123;<br>            <span class="hljs-keyword">if</span> (arr[i] &lt; pivot) &#123;<br>                j++;<br>                swap(arr, i, j);<br>            &#125;<br>        &#125;<br>        swap(arr, l, j);<br>        <span class="hljs-keyword">if</span> (j == k) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (j &lt; k) &#123;<br>            partition(arr, j + <span class="hljs-number">1</span>, r, k);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            partition(arr, l, j - <span class="hljs-number">1</span>, k);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] arr, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> tmp = arr[j];<br>        arr[j] = arr[i];<br>        arr[i] = tmp;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://leetcode-cn.com/problems/k-closest-points-to-origin/">Leetcode 最接近原点的 K 个点</a><br>这道题把比较的值替换为到原点的距离，其他的解题思路是一样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[][] kClosest(<span class="hljs-keyword">int</span>[][] points, <span class="hljs-keyword">int</span> k) &#123;<br>        <span class="hljs-keyword">if</span> (points.length &lt;= k) &#123;<br>            <span class="hljs-keyword">return</span> points;<br>        &#125;<br>        quickSelect(points, <span class="hljs-number">0</span>, points.length - <span class="hljs-number">1</span>, k);<br>        <span class="hljs-keyword">return</span> Arrays.copyOfRange(points, <span class="hljs-number">0</span>, k);<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">quickSelect</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[][] points, <span class="hljs-keyword">int</span> start, <span class="hljs-keyword">int</span> end, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> pivot = distance(points[start]);<br>        <span class="hljs-keyword">int</span> j = start;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = start + <span class="hljs-number">1</span>; i &lt;= end; i++) &#123;<br>            <span class="hljs-keyword">if</span> (distance(points[i]) &lt; pivot) &#123;<br>                j++;<br>                swap(points, i, j);<br>            &#125;<br>        &#125;<br>        swap(points, start, j);<br>        <span class="hljs-keyword">if</span> (j == k) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (j &lt; k) &#123;<br>            quickSelect(points, j + <span class="hljs-number">1</span>, end, k);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            quickSelect(points, start, j - <span class="hljs-number">1</span>, k);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> <span class="hljs-title">distance</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] point)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> point[<span class="hljs-number">0</span>] * point[<span class="hljs-number">0</span>] + point[<span class="hljs-number">1</span>] * point[<span class="hljs-number">1</span>];<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[][] points, <span class="hljs-keyword">int</span> i, <span class="hljs-keyword">int</span> j)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span>[] tmp = points[i];<br>        points[i] = points[j];<br>        points[j] = tmp;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>面试</tag>
      
      <tag>快速排序</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
